# Terraform Azure DevOps auth using Workload Identity Federaion
# Create a MI in azure and map Federated Credential to azure devops Issuer
# MI should have "Contributor" role to the subscription where you want to create resource
name: Provision Infra using Terraform
trigger:
- none

pool: 
  vmImage: ubuntu-latest
  
steps:
  - task: TerraformInstaller@0
    displayName: Install Terraform
    inputs:
      terraformVersion: 'latest'

# Along with above permission, MI should have atleast "Storage Blob Data Contributor" role for the storage container to setup terraform backend
  - task: TerraformTaskV4@4
    displayName: Terraform Init
    inputs:
      provider: 'azurerm'
      command: 'init'
      workingDirectory: '$(System.DefaultWorkingDirectory)/Terraform'
      backendServiceArm: 'Azure-Service-Connection-Development-WIF'
      backendAzureRmResourceGroupName: 'rg-juiceshop-dev-lod'
      backendAzureRmStorageAccountName: 'terraform59sa'
      backendAzureRmContainerName: 'subscription-tfstate'
      backendAzureRmKey: 'terraform.tfstate'
    env:
      ARM_USE_AZUREAD: true

  - task: TerraformTaskV4@4
    displayName: Terraform Plan
    inputs:
      provider: 'azurerm'
      command: plan
      workingDirectory: '$(System.DefaultWorkingDirectory)/Terraform'
      environmentServiceNameAzureRM: 'Azure-Service-Connection-Development-WIF'
      commandOptions: '-out=terraform-tfplan'
    env:
      ARM_USE_AZUREAD: true

  - task: TerraformTaskV4@4
    displayName: Terraform Apply
    inputs:
      provider: 'azurerm'
      command: 'apply'
      workingDirectory: '$(System.DefaultWorkingDirectory)/Terraform'
      commandOptions: '--auto-approve'
      environmentServiceNameAzureRM: 'Azure-Service-Connection-Development-WIF'
    env:
      ARM_USE_AZUREAD: true